#!/bin/bash
# Pi 4 System Check Script for Vietnamese Voice Chatbot
# Ki·ªÉm tra h·ªá th·ªëng Pi 4 cho chatbot ti·∫øng Vi·ªát

set -e

# Colors for output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

echo -e "${BLUE}üîç Raspberry Pi 4 System Check for Vietnamese Voice Chatbot${NC}"
echo "=================================================================="

# Check Pi model
echo -e "\n${YELLOW}üì± Checking Raspberry Pi Model...${NC}"
PI_MODEL=$(cat /proc/cpuinfo | grep "Model" | head -1)
echo "   $PI_MODEL"

if [[ $PI_MODEL == *"Raspberry Pi 4"* ]]; then
    echo -e "   ${GREEN}‚úÖ Confirmed: Raspberry Pi 4${NC}"
else
    echo -e "   ${YELLOW}‚ö†Ô∏è  Warning: Not detected as Pi 4, continuing anyway...${NC}"
fi

# Check memory
echo -e "\n${YELLOW}üß† Checking Memory...${NC}"
TOTAL_MEM=$(free -h | grep "Mem:" | awk '{print $2}')
echo "   Total Memory: $TOTAL_MEM"

TOTAL_MEM_MB=$(free -m | grep "Mem:" | awk '{print $2}')
if [ $TOTAL_MEM_MB -ge 7000 ]; then
    echo -e "   ${GREEN}‚úÖ 8GB RAM detected - Perfect for AI models${NC}"
elif [ $TOTAL_MEM_MB -ge 3500 ]; then
    echo -e "   ${YELLOW}‚ö†Ô∏è  4GB RAM - May need lighter models${NC}"
else
    echo -e "   ${RED}‚ùå Less than 4GB RAM - Performance issues expected${NC}"
fi

# Check GPIO/SPI
echo -e "\n${YELLOW}üîå Checking GPIO/SPI Support...${NC}"
if lsmod | grep -q spi_bcm2835; then
    echo -e "   ${GREEN}‚úÖ SPI kernel module loaded${NC}"
else
    echo -e "   ${RED}‚ùå SPI not enabled - run 'sudo raspi-config'${NC}"
fi

if [ -e /dev/spidev0.0 ]; then
    echo -e "   ${GREEN}‚úÖ SPI device available${NC}"
else
    echo -e "   ${RED}‚ùå SPI device not found${NC}"
fi

# Check user groups
echo -e "\n${YELLOW}üë§ Checking User Permissions...${NC}"
if groups $USER | grep -q gpio; then
    echo -e "   ${GREEN}‚úÖ User in gpio group${NC}"
else
    echo -e "   ${RED}‚ùå User not in gpio group - run 'sudo usermod -a -G gpio $USER'${NC}"
fi

if groups $USER | grep -q spi; then
    echo -e "   ${GREEN}‚úÖ User in spi group${NC}"
else
    echo -e "   ${RED}‚ùå User not in spi group - run 'sudo usermod -a -G spi $USER'${NC}"
fi

if groups $USER | grep -q audio; then
    echo -e "   ${GREEN}‚úÖ User in audio group${NC}"
else
    echo -e "   ${RED}‚ùå User not in audio group - run 'sudo usermod -a -G audio $USER'${NC}"
fi

# Check Python and GPIO libraries
echo -e "\n${YELLOW}üêç Checking Python GPIO Libraries...${NC}"
python3 -c "import RPi.GPIO; print('‚úÖ RPi.GPIO available')" 2>/dev/null || echo -e "   ${RED}‚ùå RPi.GPIO not available${NC}"
python3 -c "import gpiozero; print('‚úÖ gpiozero available')" 2>/dev/null || echo -e "   ${RED}‚ùå gpiozero not available${NC}"
python3 -c "import spidev; print('‚úÖ spidev available')" 2>/dev/null || echo -e "   ${RED}‚ùå spidev not available${NC}"

# Test basic GPIO functionality
echo -e "\n${YELLOW}‚ö° Testing Basic GPIO Functionality...${NC}"
python3 -c "
try:
    import RPi.GPIO as GPIO
    GPIO.setmode(GPIO.BCM)
    GPIO.setup(18, GPIO.OUT)  # Test pin 18
    GPIO.cleanup()
    print('   ‚úÖ GPIO basic test passed')
except Exception as e:
    print(f'   ‚ùå GPIO test failed: {e}')
" 2>/dev/null

# Check audio system
echo -e "\n${YELLOW}üîä Checking Audio System...${NC}"
if systemctl --user is-active --quiet pipewire 2>/dev/null; then
    echo -e "   ${GREEN}‚úÖ PipeWire running${NC}"
else
    echo -e "   ${YELLOW}‚ö†Ô∏è  PipeWire not running - run 'systemctl --user start pipewire'${NC}"
fi

if command -v wpctl &> /dev/null; then
    echo -e "   ${GREEN}‚úÖ wpctl (PipeWire control) available${NC}"
    
    # List audio devices
    echo "   Audio Sources (microphones):"
    wpctl status | grep -A 10 "Sources:" | grep -E "^\s*[0-9]+" | head -3 | while read line; do
        echo "     $line"
    done
    
    echo "   Audio Sinks (speakers):"
    wpctl status | grep -A 10 "Sinks:" | grep -E "^\s*[0-9]+" | head -3 | while read line; do
        echo "     $line"
    done
else
    echo -e "   ${RED}‚ùå wpctl not available${NC}"
fi

# Check Bluetooth
echo -e "\n${YELLOW}üì∂ Checking Bluetooth...${NC}"
if systemctl is-active --quiet bluetooth; then
    echo -e "   ${GREEN}‚úÖ Bluetooth service running${NC}"
else
    echo -e "   ${RED}‚ùå Bluetooth service not running${NC}"
fi

if command -v bluetoothctl &> /dev/null; then
    echo -e "   ${GREEN}‚úÖ bluetoothctl available${NC}"
else
    echo -e "   ${RED}‚ùå bluetoothctl not available${NC}"
fi

# Check Vietnamese TTS packages
echo -e "\n${YELLOW}üó£Ô∏è  Checking Vietnamese TTS Support...${NC}"
if command -v espeak-ng &> /dev/null; then
    echo -e "   ${GREEN}‚úÖ espeak-ng available${NC}"
    if espeak-ng --voices | grep -q "vi"; then
        echo -e "   ${GREEN}‚úÖ Vietnamese voice available in espeak-ng${NC}"
    else
        echo -e "   ${YELLOW}‚ö†Ô∏è  Vietnamese voice not found in espeak-ng${NC}"
    fi
else
    echo -e "   ${RED}‚ùå espeak-ng not available${NC}"
fi

if command -v festival &> /dev/null; then
    echo -e "   ${GREEN}‚úÖ Festival available${NC}"
else
    echo -e "   ${RED}‚ùå Festival not available${NC}"
fi

# Check Python TTS libraries
python3 -c "import gtts; print('‚úÖ gTTS available')" 2>/dev/null || echo -e "   ${RED}‚ùå gTTS not available${NC}"
python3 -c "import pygame; print('‚úÖ pygame available')" 2>/dev/null || echo -e "   ${RED}‚ùå pygame not available${NC}"

# Check AI models
echo -e "\n${YELLOW}ü§ñ Checking AI Models...${NC}"
if command -v ollama &> /dev/null; then
    echo -e "   ${GREEN}‚úÖ Ollama installed${NC}"
    
    if systemctl is-active --quiet ollama 2>/dev/null || sudo systemctl is-active --quiet ollama 2>/dev/null; then
        echo -e "   ${GREEN}‚úÖ Ollama service running${NC}"
        
        # Check available models
        echo "   Available models:"
        ollama list 2>/dev/null | tail -n +2 | while read line; do
            if [ -n "$line" ]; then
                echo "     $line"
            fi
        done
    else
        echo -e "   ${YELLOW}‚ö†Ô∏è  Ollama service not running${NC}"
    fi
else
    echo -e "   ${RED}‚ùå Ollama not installed${NC}"
fi

python3 -c "import whisper; print('‚úÖ OpenAI Whisper available')" 2>/dev/null || echo -e "   ${RED}‚ùå OpenAI Whisper not available${NC}"

# Check Vietnamese fonts
echo -e "\n${YELLOW}üìù Checking Vietnamese Font Support...${NC}"
if fc-list :lang=vi | grep -q "DejaVu\|Noto"; then
    echo -e "   ${GREEN}‚úÖ Vietnamese fonts available${NC}"
else
    echo -e "   ${YELLOW}‚ö†Ô∏è  Vietnamese fonts may be limited${NC}"
fi

# Performance recommendations
echo -e "\n${YELLOW}‚ö° Pi 4 Performance Recommendations...${NC}"
CPU_TEMP=$(vcgencmd measure_temp | cut -d= -f2 | cut -d\' -f1)
echo "   Current CPU temperature: ${CPU_TEMP}¬∞C"

if (( $(echo "$CPU_TEMP > 70" | bc -l) )); then
    echo -e "   ${RED}‚ö†Ô∏è  High temperature! Consider better cooling${NC}"
elif (( $(echo "$CPU_TEMP > 60" | bc -l) )); then
    echo -e "   ${YELLOW}‚ö†Ô∏è  Moderate temperature, monitor during heavy use${NC}"
else
    echo -e "   ${GREEN}‚úÖ Good temperature${NC}"
fi

# Check GPU memory split
GPU_MEM=$(vcgencmd get_mem gpu | cut -d= -f2 | cut -dM -f1)
echo "   GPU memory split: ${GPU_MEM}MB"

if [ $GPU_MEM -gt 256 ]; then
    echo -e "   ${YELLOW}‚ö†Ô∏è  High GPU memory - consider reducing if not using desktop${NC}"
elif [ $GPU_MEM -lt 64 ]; then
    echo -e "   ${YELLOW}‚ö†Ô∏è  Low GPU memory - may affect LCD performance${NC}"
else
    echo -e "   ${GREEN}‚úÖ Good GPU memory allocation${NC}"
fi

# Summary and recommendations
echo -e "\n${BLUE}üìã Summary and Recommendations:${NC}"
echo "=================================================================="

if [[ $PI_MODEL == *"Raspberry Pi 4"* ]] && [ $TOTAL_MEM_MB -ge 7000 ]; then
    echo -e "${GREEN}‚úÖ Your Pi 4 8GB is well-suited for this Vietnamese chatbot project!${NC}"
    echo
    echo "Recommended optimizations:"
    echo "‚Ä¢ Use qwen2:0.5b or tinyllama:1.1b for Ollama (lightweight models)"
    echo "‚Ä¢ Use Whisper 'small' model for better Vietnamese recognition"
    echo "‚Ä¢ Prioritize Edge TTS > gTTS > espeak for voice quality"
    echo "‚Ä¢ Monitor temperature during heavy use"
else
    echo -e "${YELLOW}‚ö†Ô∏è  Your system may need some optimizations for best performance${NC}"
fi

echo
echo "Next steps:"
echo "1. Fix any red (‚ùå) issues above"
echo "2. Follow the README.md installation guide"
echo "3. Test with: python3 test_vietnamese_tts.py"
echo "4. Run chatbot with: ./start_vietnamese_chatbot.sh"

echo -e "\n${BLUE}üéâ System check complete!${NC}"