<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="CopilotDiffPersistence">
    <option name="pendingDiffs">
      <map>
        <entry key="$PROJECT_DIR$/pi4_auto_setup.sh">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/pi4_auto_setup.sh" />
              <option name="updatedContent" value="#!/bin/bash&#10;# Pi 4 Auto Configuration Script for Vietnamese Voice Chatbot&#10;# Tự động cấu hình Pi 4 cho chatbot tiếng Việt&#10;&#10;set -e&#10;&#10;# Colors&#10;RED='\033[0;31m'&#10;GREEN='\033[0;32m'&#10;YELLOW='\033[1;33m'&#10;BLUE='\033[0;34m'&#10;CYAN='\033[0;36m'&#10;NC='\033[0m'&#10;&#10;echo -e &quot;${BLUE}╔════════════════════════════════════════════════════════════╗${NC}&quot;&#10;echo -e &quot;${BLUE}║   Pi 4 Auto Setup - Vietnamese Voice Chatbot              ║${NC}&quot;&#10;echo -e &quot;${BLUE}║   Tự động cấu hình Raspberry Pi 4 cho chatbot tiếng Việt   ║${NC}&quot;&#10;echo -e &quot;${BLUE}╚════════════════════════════════════════════════════════════╝${NC}&quot;&#10;echo &quot;&quot;&#10;&#10;# Detect RAM&#10;echo -e &quot;${CYAN} Đang phát hiện cấu hình Pi 4...${NC}&quot;&#10;TOTAL_RAM_MB=$(free -m | grep &quot;Mem:&quot; | awk '{print $2}')&#10;PI_MODEL=$(cat /proc/cpuinfo | grep &quot;Model&quot; | head -1 | cut -d: -f2 | xargs)&#10;&#10;echo -e &quot;   Pi Model: ${GREEN}$PI_MODEL${NC}&quot;&#10;echo -e &quot;   Total RAM: ${GREEN}${TOTAL_RAM_MB}MB${NC}&quot;&#10;&#10;# Determine RAM tier&#10;if [ $TOTAL_RAM_MB -ge 7000 ]; then&#10;    RAM_TIER=&quot;8GB&quot;&#10;    WHISPER_MODEL=&quot;medium&quot;&#10;    LLM_MODEL=&quot;gemma2:2b&quot;&#10;    TTS_ENGINE=&quot;edge&quot;&#10;    GPU_MEM=256&#10;    SWAP_SIZE=1024&#10;    OMP_THREADS=6&#10;    echo -e &quot;   RAM Tier: ${GREEN}8GB - TỐI ƯU ${NC}&quot;&#10;elif [ $TOTAL_RAM_MB -ge 3500 ]; then&#10;    RAM_TIER=&quot;4GB&quot;&#10;    WHISPER_MODEL=&quot;small&quot;&#10;    LLM_MODEL=&quot;qwen2:0.5b&quot;&#10;    TTS_ENGINE=&quot;edge&quot;&#10;    GPU_MEM=128&#10;    SWAP_SIZE=2048&#10;    OMP_THREADS=4&#10;    echo -e &quot;   RAM Tier: ${GREEN}4GB - KHUYẾN NGHỊ ⭐${NC}&quot;&#10;elif [ $TOTAL_RAM_MB -ge 1800 ]; then&#10;    RAM_TIER=&quot;2GB&quot;&#10;    WHISPER_MODEL=&quot;base&quot;&#10;    LLM_MODEL=&quot;tinyllama:1.1b&quot;&#10;    TTS_ENGINE=&quot;gtts&quot;&#10;    GPU_MEM=96&#10;    SWAP_SIZE=2048&#10;    OMP_THREADS=3&#10;    echo -e &quot;   RAM Tier: ${YELLOW}2GB - TỐI THIỂU${NC}&quot;&#10;else&#10;    RAM_TIER=&quot;1GB&quot;&#10;    WHISPER_MODEL=&quot;tiny&quot;&#10;    LLM_MODEL=&quot;tinyllama:1.1b&quot;&#10;    TTS_ENGINE=&quot;espeak&quot;&#10;    GPU_MEM=64&#10;    SWAP_SIZE=2048&#10;    OMP_THREADS=2&#10;    echo -e &quot;   RAM Tier: ${RED}1GB - HẠN CHẾ${NC}&quot;&#10;fi&#10;&#10;echo &quot;&quot;&#10;echo -e &quot;${CYAN} Cấu hình được khuyến nghị:${NC}&quot;&#10;echo -e &quot;   Whisper Model: ${GREEN}$WHISPER_MODEL${NC}&quot;&#10;echo -e &quot;   LLM Model: ${GREEN}$LLM_MODEL${NC}&quot;&#10;echo -e &quot;   TTS Engine: ${GREEN}$TTS_ENGINE${NC}&quot;&#10;echo -e &quot;   GPU Memory: ${GREEN}${GPU_MEM}MB${NC}&quot;&#10;echo -e &quot;   Swap Size: ${GREEN}${SWAP_SIZE}MB${NC}&quot;&#10;echo -e &quot;   OMP Threads: ${GREEN}$OMP_THREADS${NC}&quot;&#10;echo &quot;&quot;&#10;&#10;# Ask for confirmation&#10;read -p &quot;Tiếp tục cài đặt với cấu hình này? (y/n): &quot; -n 1 -r&#10;echo&#10;if [[ ! $REPLY =~ ^[Yy]$ ]]; then&#10;    echo -e &quot;${YELLOW}Đã hủy cài đặt.${NC}&quot;&#10;    exit 0&#10;fi&#10;&#10;# Function to check if running as root&#10;check_root() {&#10;    if [ &quot;$EUID&quot; -eq 0 ]; then&#10;        echo -e &quot;${RED}❌ Không nên chạy script này với sudo!${NC}&quot;&#10;        echo -e &quot;   Chạy lại: ${YELLOW}./pi4_auto_setup.sh${NC}&quot;&#10;        exit 1&#10;    fi&#10;}&#10;&#10;# Function to log&#10;log() {&#10;    echo -e &quot;${GREEN}✅${NC} $1&quot;&#10;}&#10;&#10;warn() {&#10;    echo -e &quot;${YELLOW}⚠️${NC}  $1&quot;&#10;}&#10;&#10;error() {&#10;    echo -e &quot;${RED}❌${NC} $1&quot;&#10;}&#10;&#10;check_root&#10;&#10;echo &quot;&quot;&#10;echo -e &quot;${BLUE}═══════════════════════════════════════════════════════════${NC}&quot;&#10;echo -e &quot;${CYAN}BƯỚC 1: Cập nhật hệ thống${NC}&quot;&#10;echo -e &quot;${BLUE}═══════════════════════════════════════════════════════════${NC}&quot;&#10;&#10;# Update system&#10;sudo apt update&#10;sudo apt upgrade -y&#10;log &quot;Đã cập nhật hệ thống&quot;&#10;&#10;echo &quot;&quot;&#10;echo -e &quot;${BLUE}═══════════════════════════════════════════════════════════${NC}&quot;&#10;echo -e &quot;${CYAN}BƯỚC 2: Cài đặt dependencies${NC}&quot;&#10;echo -e &quot;${BLUE}═══════════════════════════════════════════════════════════${NC}&quot;&#10;&#10;# Core packages&#10;sudo apt install -y \&#10;    build-essential cmake git \&#10;    python3-dev python3-pip python3-venv \&#10;    libopenblas-dev libatlas-base-dev \&#10;    libhdf5-dev libportaudio2 \&#10;    ffmpeg libavcodec-extra libsndfile1 flac&#10;log &quot;Đã cài đặt core packages&quot;&#10;&#10;# Audio stack&#10;sudo apt install -y \&#10;    pipewire pipewire-pulse wireplumber \&#10;    libspa-0.2-bluetooth alsa-utils&#10;log &quot;Đã cài đặt audio stack&quot;&#10;&#10;# Bluetooth&#10;sudo apt install -y bluez bluez-tools pi-bluetooth&#10;log &quot;Đã cài đặt Bluetooth 5.0&quot;&#10;&#10;# TTS engines&#10;sudo apt install -y \&#10;    espeak-ng espeak-ng-data \&#10;    festival festvox-us-slt-hts \&#10;    language-pack-vi \&#10;    fonts-noto-cjk fonts-dejavu&#10;log &quot;Đã cài đặt TTS engines cho tiếng Việt&quot;&#10;&#10;# GUI libraries (nếu có desktop)&#10;if [ -n &quot;$DISPLAY&quot; ] || [ -n &quot;$WAYLAND_DISPLAY&quot; ]; then&#10;    sudo apt install -y \&#10;        python3-pygame python3-opencv \&#10;        fonts-liberation fonts-vlgothic&#10;    log &quot;Đã cài đặt GUI libraries&quot;&#10;fi&#10;&#10;echo &quot;&quot;&#10;echo -e &quot;${BLUE}═══════════════════════════════════════════════════════════${NC}&quot;&#10;echo -e &quot;${CYAN}BƯỚC 3: Setup Python virtual environment${NC}&quot;&#10;echo -e &quot;${BLUE}═══════════════════════════════════════════════════════════${NC}&quot;&#10;&#10;# Create project directory&#10;PROJECT_DIR=&quot;$HOME/voice-chatbot&quot;&#10;if [ ! -d &quot;$PROJECT_DIR&quot; ]; then&#10;    mkdir -p &quot;$PROJECT_DIR&quot;&#10;    log &quot;Đã tạo thư mục project: $PROJECT_DIR&quot;&#10;fi&#10;&#10;cd &quot;$PROJECT_DIR&quot;&#10;&#10;# Create venv&#10;if [ ! -d &quot;.venv&quot; ]; then&#10;    python3 -m venv .venv&#10;    log &quot;Đã tạo Python virtual environment&quot;&#10;fi&#10;&#10;# Activate venv&#10;source .venv/bin/activate&#10;&#10;# Upgrade pip&#10;pip install --upgrade pip setuptools wheel&#10;log &quot;Đã upgrade pip&quot;&#10;&#10;# Install Python packages&#10;echo -e &quot;${CYAN}   Đang cài đặt Python packages (có thể mất vài phút)...${NC}&quot;&#10;&#10;# Core packages&#10;pip install numpy&#10;pip install torch torchaudio --index-url https://download.pytorch.org/whl/cpu&#10;&#10;# Whisper&#10;pip install faster-whisper openai-whisper soundfile librosa&#10;&#10;# Ollama&#10;pip install ollama&#10;&#10;# TTS&#10;pip install gtts gTTS-token edge-tts pyttsx3&#10;&#10;# Audio&#10;pip install pyaudio pygame sounddevice pydub&#10;&#10;# GUI&#10;pip install pygame Pillow&#10;&#10;# GPIO&#10;pip install RPi.GPIO gpiozero lgpio spidev&#10;&#10;# Utilities&#10;pip install python-dotenv requests&#10;&#10;log &quot;Đã cài đặt tất cả Python packages&quot;&#10;&#10;echo &quot;&quot;&#10;echo -e &quot;${BLUE}═══════════════════════════════════════════════════════════${NC}&quot;&#10;echo -e &quot;${CYAN}BƯỚC 4: Cài đặt Ollama và models${NC}&quot;&#10;echo -e &quot;${BLUE}═══════════════════════════════════════════════════════════${NC}&quot;&#10;&#10;# Check if Ollama is installed&#10;if ! command -v ollama &amp;&gt; /dev/null; then&#10;    echo -e &quot;${CYAN}   Đang cài đặt Ollama...${NC}&quot;&#10;    curl -fsSL https://ollama.com/install.sh | sh&#10;    sudo systemctl enable --now ollama&#10;    log &quot;Đã cài đặt Ollama&quot;&#10;else&#10;    log &quot;Ollama đã được cài đặt&quot;&#10;fi&#10;&#10;# Wait for Ollama to start&#10;sleep 3&#10;&#10;# Pull models based on RAM&#10;echo -e &quot;${CYAN}   Đang tải model $LLM_MODEL (có thể mất vài phút)...${NC}&quot;&#10;ollama pull $LLM_MODEL&#10;log &quot;Đã tải LLM model: $LLM_MODEL&quot;&#10;&#10;# Pull additional models for better Vietnamese support&#10;if [ &quot;$RAM_TIER&quot; == &quot;8GB&quot; ]; then&#10;    echo -e &quot;${CYAN}   Đang tải thêm models cho 8GB RAM...${NC}&quot;&#10;    ollama pull qwen2:1.5b&#10;    ollama pull llama3.2:3b&#10;    log &quot;Đã tải additional models&quot;&#10;fi&#10;&#10;echo &quot;&quot;&#10;echo -e &quot;${BLUE}═══════════════════════════════════════════════════════════${NC}&quot;&#10;echo -e &quot;${CYAN}BƯỚC 5: Cấu hình hệ thống${NC}&quot;&#10;echo -e &quot;${BLUE}═══════════════════════════════════════════════════════════${NC}&quot;&#10;&#10;# Add user to groups&#10;sudo usermod -aG audio,gpio,spi $USER&#10;log &quot;Đã thêm user vào groups: audio, gpio, spi&quot;&#10;&#10;# Enable services&#10;sudo systemctl enable --now bluetooth&#10;systemctl --user enable --now pipewire pipewire-pulse wireplumber&#10;sudo loginctl enable-linger $USER&#10;log &quot;Đã enable audio và bluetooth services&quot;&#10;&#10;# Configure swap&#10;echo -e &quot;${CYAN}   Đang cấu hình swap...${NC}&quot;&#10;if [ -f /etc/dphys-swapfile ]; then&#10;    sudo dphys-swapfile swapoff&#10;    sudo sed -i &quot;s/^CONF_SWAPSIZE=.*/CONF_SWAPSIZE=$SWAP_SIZE/&quot; /etc/dphys-swapfile&#10;    sudo dphys-swapfile setup&#10;    sudo dphys-swapfile swapon&#10;    log &quot;Đã cấu hình swap: ${SWAP_SIZE}MB&quot;&#10;fi&#10;&#10;# Configure config.txt&#10;CONFIG_FILE=&quot;/boot/firmware/config.txt&quot;&#10;if [ ! -f &quot;$CONFIG_FILE&quot; ]; then&#10;    CONFIG_FILE=&quot;/boot/config.txt&quot;&#10;fi&#10;&#10;if [ -f &quot;$CONFIG_FILE&quot; ]; then&#10;    echo -e &quot;${CYAN}   Đang cấu hình $CONFIG_FILE...${NC}&quot;&#10;    &#10;    # Backup&#10;    sudo cp &quot;$CONFIG_FILE&quot; &quot;${CONFIG_FILE}.backup_$(date +%Y%m%d_%H%M%S)&quot;&#10;    &#10;    # Add optimization settings if not exists&#10;    if ! grep -q &quot;# === Pi 4 Voice Chatbot Optimization ===&quot; &quot;$CONFIG_FILE&quot;; then&#10;        sudo tee -a &quot;$CONFIG_FILE&quot; &gt; /dev/null &lt;&lt;EOF&#10;&#10;# === Pi 4 Voice Chatbot Optimization ===&#10;gpu_mem=$GPU_MEM&#10;dtparam=audio=on&#10;audio_pwm_mode=2&#10;dtparam=krnbt=on&#10;hdmi_force_hotplug=1&#10;hdmi_drive=2&#10;max_usb_current=1&#10;EOF&#10;        log &quot;Đã thêm optimization settings vào config.txt&quot;&#10;    else&#10;        warn &quot;Config.txt đã có optimization settings&quot;&#10;    fi&#10;fi&#10;&#10;# Create environment file&#10;ENV_FILE=&quot;$PROJECT_DIR/.env&quot;&#10;cat &gt; &quot;$ENV_FILE&quot; &lt;&lt;EOF&#10;# Pi 4 Configuration - Auto-generated&#10;RAM_TIER=$RAM_TIER&#10;WHISPER_MODEL=$WHISPER_MODEL&#10;LLM_MODEL=$LLM_MODEL&#10;TTS_ENGINE=$TTS_ENGINE&#10;OMP_NUM_THREADS=$OMP_THREADS&#10;MKL_NUM_THREADS=$OMP_THREADS&#10;GPIOZERO_PIN_FACTORY=rpigpio&#10;EOF&#10;log &quot;Đã tạo file cấu hình: .env&quot;&#10;&#10;# Create bashrc additions&#10;BASHRC_ADDITION=&quot;$HOME/.bashrc_chatbot&quot;&#10;cat &gt; &quot;$BASHRC_ADDITION&quot; &lt;&lt;EOF&#10;# Vietnamese Voice Chatbot Environment&#10;export OMP_NUM_THREADS=$OMP_THREADS&#10;export MKL_NUM_THREADS=$OMP_THREADS&#10;export GPIOZERO_PIN_FACTORY=rpigpio&#10;&#10;# Chatbot aliases&#10;alias chatbot='cd ~/voice-chatbot &amp;&amp; source .venv/bin/activate'&#10;alias start-chatbot='cd ~/voice-chatbot &amp;&amp; ./start_hdmi_chatbot.sh'&#10;alias check-pi4='cd ~/voice-chatbot &amp;&amp; ./pi4_system_check.sh'&#10;EOF&#10;&#10;if ! grep -q &quot;source ~/.bashrc_chatbot&quot; &quot;$HOME/.bashrc&quot;; then&#10;    echo &quot;source ~/.bashrc_chatbot&quot; &gt;&gt; &quot;$HOME/.bashrc&quot;&#10;    log &quot;Đã thêm environment variables vào .bashrc&quot;&#10;fi&#10;&#10;echo &quot;&quot;&#10;echo -e &quot;${BLUE}═══════════════════════════════════════════════════════════${NC}&quot;&#10;echo -e &quot;${CYAN}BƯỚC 6: Tạo config file cho chatbot${NC}&quot;&#10;echo -e &quot;${BLUE}═══════════════════════════════════════════════════════════${NC}&quot;&#10;&#10;# Create config.py&#10;CONFIG_PY=&quot;$PROJECT_DIR/config.py&quot;&#10;cat &gt; &quot;$CONFIG_PY&quot; &lt;&lt;EOF&#10;&quot;&quot;&quot;&#10;Auto-generated configuration for Pi 4 Vietnamese Voice Chatbot&#10;RAM Tier: $RAM_TIER&#10;&quot;&quot;&quot;&#10;&#10;# Models configuration&#10;WHISPER_MODEL = &quot;$WHISPER_MODEL&quot;&#10;LLM_MODEL = &quot;$LLM_MODEL&quot;&#10;TTS_ENGINE = &quot;$TTS_ENGINE&quot;&#10;&#10;# Performance tuning&#10;OMP_NUM_THREADS = $OMP_THREADS&#10;MKL_NUM_THREADS = $OMP_THREADS&#10;&#10;# Audio settings&#10;PREF_SAMPLE_RATE = 16000&#10;PREF_CHANNELS = 1&#10;&#10;# VAD settings&#10;FRAME_MS = 30&#10;SILENCE_THRESHOLD = 120&#10;END_SILENCE_MS = 800&#10;MIN_SPEECH_MS = 300&#10;MAX_RECORDING_MS = 15000&#10;&#10;# Display settings (for HDMI version)&#10;SCREEN_WIDTH = 800&#10;SCREEN_HEIGHT = 600&#10;&#10;# GPIO pins&#10;STOP_BUTTON_PIN = 22&#10;PAUSE_BUTTON_PIN = 23&#10;RESUME_BUTTON_PIN = 24&#10;&#10;# Language&#10;DEFAULT_LANGUAGE = &quot;vi&quot;&#10;SUPPORTED_LANGUAGES = [&quot;vi&quot;, &quot;en&quot;, &quot;auto&quot;]&#10;&#10;# Wake words&#10;VIETNAMESE_WAKE_WORDS = [&quot;xin chào&quot;, &quot;chào bạn&quot;, &quot;hey tiến minh&quot;, &quot;tiến minh ơi&quot;]&#10;ENGLISH_WAKE_WORDS = [&quot;hey computer&quot;, &quot;okay computer&quot;, &quot;hey assistant&quot;]&#10;EOF&#10;log &quot;Đã tạo config.py&quot;&#10;&#10;echo &quot;&quot;&#10;echo -e &quot;${BLUE}═══════════════════════════════════════════════════════════${NC}&quot;&#10;echo -e &quot;${CYAN}BƯỚC 7: Test cài đặt${NC}&quot;&#10;echo -e &quot;${BLUE}═══════════════════════════════════════════════════════════${NC}&quot;&#10;&#10;# Test Python imports&#10;echo -e &quot;${CYAN}   Testing Python packages...${NC}&quot;&#10;python3 -c &quot;&#10;import sys&#10;packages = {&#10;    'numpy': 'NumPy',&#10;    'torch': 'PyTorch',&#10;    'faster_whisper': 'Faster Whisper',&#10;    'ollama': 'Ollama',&#10;    'gtts': 'gTTS',&#10;    'pygame': 'Pygame',&#10;    'RPi.GPIO': 'RPi.GPIO',&#10;    'gpiozero': 'gpiozero'&#10;}&#10;&#10;failed = []&#10;for pkg, name in packages.items():&#10;    try:&#10;        __import__(pkg)&#10;        print(f'✅ {name}')&#10;    except ImportError:&#10;        print(f'❌ {name}')&#10;        failed.append(name)&#10;&#10;if failed:&#10;    print(f'\n⚠️  Some packages failed: {failed}')&#10;    sys.exit(1)&#10;else:&#10;    print('\n✅ All packages installed successfully!')&#10;&quot;&#10;&#10;if [ $? -eq 0 ]; then&#10;    log &quot;Python packages test passed&quot;&#10;else&#10;    error &quot;Some Python packages failed to import&quot;&#10;fi&#10;&#10;# Test Ollama&#10;echo -e &quot;${CYAN}   Testing Ollama...${NC}&quot;&#10;if ollama list | grep -q &quot;$LLM_MODEL&quot;; then&#10;    log &quot;Ollama model $LLM_MODEL available&quot;&#10;else&#10;    warn &quot;Ollama model $LLM_MODEL not found in list&quot;&#10;fi&#10;&#10;# Test audio&#10;echo -e &quot;${CYAN}   Testing audio system...${NC}&quot;&#10;if systemctl --user is-active --quiet pipewire; then&#10;    log &quot;PipeWire is running&quot;&#10;else&#10;    warn &quot;PipeWire is not running&quot;&#10;fi&#10;&#10;echo &quot;&quot;&#10;echo -e &quot;${GREEN}╔════════════════════════════════════════════════════════════╗${NC}&quot;&#10;echo -e &quot;${GREEN}║                    CÀI ĐẶT HOÀN TẤT!                     ║${NC}&quot;&#10;echo -e &quot;${GREEN}╚════════════════════════════════════════════════════════════╝${NC}&quot;&#10;echo &quot;&quot;&#10;echo -e &quot;${CYAN} Tóm tắt cấu hình:${NC}&quot;&#10;echo -e &quot;   Pi 4 RAM: ${GREEN}$RAM_TIER${NC}&quot;&#10;echo -e &quot;   Whisper: ${GREEN}$WHISPER_MODEL${NC}&quot;&#10;echo -e &quot;   LLM: ${GREEN}$LLM_MODEL${NC}&quot;&#10;echo -e &quot;   TTS: ${GREEN}$TTS_ENGINE${NC}&quot;&#10;echo &quot;&quot;&#10;echo -e &quot;${YELLOW}⚠️  QUAN TRỌNG: Cần REBOOT để áp dụng tất cả thay đổi!${NC}&quot;&#10;echo &quot;&quot;&#10;echo -e &quot;${CYAN}Các bước tiếp theo:${NC}&quot;&#10;echo -e &quot;   1️⃣  Reboot Pi: ${GREEN}sudo reboot${NC}&quot;&#10;echo -e &quot;   2️⃣  Sau khi boot lại, kết nối Bluetooth speaker&quot;&#10;echo -e &quot;   3️⃣  Cắm USB microphone&quot;&#10;echo -e &quot;   4️⃣  Chạy chatbot: ${GREEN}cd ~/voice-chatbot &amp;&amp; ./start_hdmi_chatbot.sh${NC}&quot;&#10;echo &quot;&quot;&#10;echo -e &quot;${CYAN}Hữu ích:${NC}&quot;&#10;echo -e &quot;   • Kiểm tra hệ thống: ${GREEN}check-pi4${NC}&quot;&#10;echo -e &quot;   • Vào project: ${GREEN}chatbot${NC}&quot;&#10;echo -e &quot;   • Chạy chatbot: ${GREEN}start-chatbot${NC}&quot;&#10;echo &quot;&quot;&#10;&#10;# Ask for reboot&#10;read -p &quot;Reboot ngay bây giờ? (y/n): &quot; -n 1 -r&#10;echo&#10;if [[ $REPLY =~ ^[Yy]$ ]]; then&#10;    echo -e &quot;${GREEN}Đang reboot...${NC}&quot;&#10;    sudo reboot&#10;else&#10;    echo -e &quot;${YELLOW}Nhớ reboot sau: sudo reboot${NC}&quot;&#10;fi&#10;" />
            </PendingDiffInfo>
          </value>
        </entry>
      </map>
    </option>
  </component>
</project>